apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval: {{ global.prometheus.scrape_interval | default('15s') }}
      evaluation_interval: {{ global.prometheus.evaluation_interval | default('15s') }}
    
    scrape_configs:
      # Scrape Vector metrics
      - job_name: 'vector'
        kubernetes_sd_configs:
        - role: pod
          namespaces:
            names:
              - {{ global.namespace | default('monitoring') }}
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: pod_name

      {% for cluster_name, cluster in clusters.items() %}
      # Cluster IP targets
      - job_name: '{{ cluster_name }}_cluster_ips'
        static_configs:
          - targets:
              - '{{ cluster.cluster_ip }}:{{ global.prometheus.ports.api | default('9101') }}'  # API
              - '{{ cluster.cluster_ip }}:{{ global.prometheus.ports.c_metrics | default('9102') }}'  # C-Metrics
              - '{{ cluster.cluster_ip }}:{{ global.prometheus.ports.c_advisor | default('9103') }}'  # cAdvisor
              - '{{ cluster.cluster_ip }}:{{ global.prometheus.ports.node_exporter | default('9100') }}'  # Node Exporter
            labels:
              cluster: '{{ cluster_name }}'
              instance: '{{ cluster_name }}_cluster_ip'
              node_type: 'cluster_ip'
      
      {% for node in cluster.nodes %}
      # {{ node.type|title }} node: {{ node.name }}
      - job_name: '{{ cluster_name }}_{{ node.type }}_nodes'
        static_configs:
          - targets: [
              '{{ node.ip }}:{{ global.prometheus.ports.node_exporter | default('9100') }}'  # Node Exporter
              {%- if node.type == 'dsx' %},
              '{{ node.ip }}:{{ global.prometheus.ports.c_metrics | default('9102') }}'  # DSX specific
              {%- endif %}
            ]
            labels:
              cluster: '{{ cluster_name }}'
              instance: '{{ node.name }}'
              node_type: '{{ node.type }}'
      {% endfor %}
      {% endfor %}
